
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULTDIVnonassocNEGleftPOWADD COMMENT COS DIV EQUAL ERROR EXP IDENTIFIER LPAREN MULT NUMBER PI POW RPAREN SIN SUB TANstatement : assignment\n                 | expressionassignment : IDENTIFIER EQUAL expressionexpression : expression ADD expressionexpression : expression SUB expressionexpression : expression MULT expressionexpression : expression DIV expressionexpression : SUB expression %prec NEGexpression : expression POW expressionexpression : EXPexpression : PIexpression : COMMENTexpression : LPAREN expression RPARENexpression : SIN LPAREN expression RPARENexpression : COS LPAREN expression RPARENexpression : TAN LPAREN expression RPARENexpression : NUMBERexpression : IDENTIFIER'
    
_lr_action_items = {'IDENTIFIER':([0,5,9,14,15,16,17,18,19,23,24,25,],[4,21,21,21,21,21,21,21,21,21,21,21,]),'SUB':([0,3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,],[5,15,-18,5,-10,-11,-12,5,-17,5,5,5,5,5,5,-8,-18,15,5,5,5,-4,-5,-6,-7,-9,15,-13,15,15,15,-14,-15,-16,]),'EXP':([0,5,9,14,15,16,17,18,19,23,24,25,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'PI':([0,5,9,14,15,16,17,18,19,23,24,25,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'COMMENT':([0,5,9,14,15,16,17,18,19,23,24,25,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'LPAREN':([0,5,9,10,11,12,14,15,16,17,18,19,23,24,25,],[9,9,9,23,24,25,9,9,9,9,9,9,9,9,9,]),'SIN':([0,5,9,14,15,16,17,18,19,23,24,25,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'COS':([0,5,9,14,15,16,17,18,19,23,24,25,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'TAN':([0,5,9,14,15,16,17,18,19,23,24,25,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'NUMBER':([0,5,9,14,15,16,17,18,19,23,24,25,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'$end':([1,2,3,4,6,7,8,13,20,21,26,27,28,29,30,31,32,36,37,38,],[0,-1,-2,-18,-10,-11,-12,-17,-8,-18,-4,-5,-6,-7,-9,-3,-13,-14,-15,-16,]),'ADD':([3,4,6,7,8,13,20,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,],[14,-18,-10,-11,-12,-17,-8,-18,14,-4,-5,-6,-7,-9,14,-13,14,14,14,-14,-15,-16,]),'MULT':([3,4,6,7,8,13,20,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,],[16,-18,-10,-11,-12,-17,-8,-18,16,16,16,-6,-7,-9,16,-13,16,16,16,-14,-15,-16,]),'DIV':([3,4,6,7,8,13,20,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,],[17,-18,-10,-11,-12,-17,-8,-18,17,17,17,-6,-7,-9,17,-13,17,17,17,-14,-15,-16,]),'POW':([3,4,6,7,8,13,20,21,22,26,27,28,29,30,31,32,33,34,35,36,37,38,],[18,-18,-10,-11,-12,-17,18,-18,18,18,18,18,18,-9,18,-13,18,18,18,-14,-15,-16,]),'EQUAL':([4,],[19,]),'RPAREN':([6,7,8,13,20,21,22,26,27,28,29,30,32,33,34,35,36,37,38,],[-10,-11,-12,-17,-8,-18,32,-4,-5,-6,-7,-9,-13,36,37,38,-14,-15,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'assignment':([0,],[2,]),'expression':([0,5,9,14,15,16,17,18,19,23,24,25,],[3,20,22,26,27,28,29,30,31,33,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> assignment','statement',1,'p_statement','yacc.py',16),
  ('statement -> expression','statement',1,'p_statement','yacc.py',17),
  ('assignment -> IDENTIFIER EQUAL expression','assignment',3,'p_assignment','yacc.py',22),
  ('expression -> expression ADD expression','expression',3,'p_add','yacc.py',28),
  ('expression -> expression SUB expression','expression',3,'p_sub','yacc.py',33),
  ('expression -> expression MULT expression','expression',3,'p_mult','yacc.py',38),
  ('expression -> expression DIV expression','expression',3,'p_div','yacc.py',43),
  ('expression -> SUB expression','expression',2,'p_neg','yacc.py',48),
  ('expression -> expression POW expression','expression',3,'p_pow','yacc.py',53),
  ('expression -> EXP','expression',1,'p_exp','yacc.py',58),
  ('expression -> PI','expression',1,'p_pi','yacc.py',62),
  ('expression -> COMMENT','expression',1,'p_comment','yacc.py',66),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_group','yacc.py',69),
  ('expression -> SIN LPAREN expression RPAREN','expression',4,'p_sin','yacc.py',74),
  ('expression -> COS LPAREN expression RPAREN','expression',4,'p_cos','yacc.py',79),
  ('expression -> TAN LPAREN expression RPAREN','expression',4,'p_tan','yacc.py',84),
  ('expression -> NUMBER','expression',1,'p_number','yacc.py',89),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','yacc.py',98),
]
